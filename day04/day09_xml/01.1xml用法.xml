<?xml version='1.0' encoding="utf-8" standalone="no"?>
<users>
    <user id='1'>
        <name>zhangsan</name>
        <age>23</age>
        <gender>male</gender>
        <br/>
    </user>

    <user id='2'>
        <name>lisi</name>
        <age>24</age>
        <gender>female</gender>
    </user>
</users>


<!--* 基本语法：
		1. xml文档的后缀名 .xml
		2. xml第一行必须定义为文档声明
		3. xml文档中有且仅有一个根标签
		4. 属性值必须使用引号(单双都可)引起来
		5. 标签必须正确关闭
		6. xml标签名称区分大小写


	属性列表：
				* version：版本号，必须的属性
				* encoding：编码方式。告知解析引擎当前文档使用的字符集，默认值：ISO-8859-1
				* standalone：是否独立
					* 取值：
						* yes：不依赖其他文件
						* no：依赖其他文件
		2. 指令(了解)：结合css的
			* <?xml-stylesheet type="text/css" href="a.css" ?>
		3. 标签：标签名称自定义的
			* 规则：
				* 名称可以包含字母、数字以及其他的字符
				* 名称不能以数字或者标点符号开始
				* 名称不能以字母 xml（或者 XML、Xml 等等）开始
				* 名称不能包含空格


	文本：
			* CDATA区：在该区域中的数据会被原样展示
				* 格式：  <![CDATA[ 数据 ]]>




		CDATA（Character Data）区是XML中的一个特殊区域，用于包含不希望被XML解析器解释为标记的文本内容。
		CDATA区常用于存放包含特殊字符或标签的文本数据，例如HTML代码、代码片段、XML代码片段等。
		主要原因包括以下几点：
        保留特殊字符： XML解析器会解释特定字符（例如<、>、&等）作为标记，而不是作为文本内容。
        如果您希望在XML文档中包含这些字符，但不希望解析器将其视为标记，您可以将这些内容放在CDATA区，
        这样解析器将保留它们原本的形式。

        代码片段： 如果您需要在XML文档中嵌入一些代码片段，如HTML、JavaScript或其他编程语言代码，
        这些代码中可能包含大量的<、>等特殊字符。将这些代码放在CDATA区可以确保它们不会被解析器解释为XML标记，
        从而保持其原始格式。

        避免转义： 如果文本中包含大量的特殊字符，例如链接、脚本等，将其全部进行转义会使XML文档变得复杂且难以阅读。
        使用CDATA区可以避免这种情况，使XML文档更加简洁和易读。



		-->